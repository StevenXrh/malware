import json

import configparser


class json_utils():

    def __init__(self):
        self.conf = configparser.ConfigParser()
        self.conf.read('D:\malware\config.ini')
        self.filename = self.conf.get('json_ utils_config', 'filename')

    #文件api调用
    def json_api2_reading(self):
        api=[]
        with open(self.filename,'r') as f:
            data = json.load(f)
        processes = (data['behavior']['processes'])
        for i in processes:
            for j in i['calls']:
               api.append(j['category']+' '+j['api'])
        return list(set(api))

    #json文件hosts调用模块
    def  json_hosts_reading(self):
        with open(self.filename, 'r') as f:
            data = json.load(f)
        hosts = (data['network']['hosts'])
        return hosts

    #json文件signatures调用模块
    def  json_signatures_reading(self):
        with open(self.filename, 'r') as f:
            data = json.load(f)
        signatures = (data['signatures'])
        return signatures

    #json文件dll请求
    def json_dll_reading(self):
        dll = []
        with open(self.filename, 'r') as f:
            data = json.load(f)
        generic= data['behavior']['generic']
        for i in generic:
            for k,v in i['summary'].items():
                if k == 'dll_loaded':
                    dll.append(v)
        return dll[0]


    #json文件http请求调用
    def json_http_reading(self):
        http = []
        with open(self.filename, 'r') as f:
            data = json.load(f)
        procmemory = data['procmemory']
        for i in procmemory:
            http.append(i['urls'])
        return http[0]


    # json文件api调用模块
    # 这块内容是该文件的所有api汇总，用操作位置+api会显得更加准确但是字段过长 可以考虑用一下这段
    # def json_api_reading(filename):
    #     temp = []
    #     apis=[]
    #
    #     with open(filename,'r') as f:
    #         data = json.load(f)
    #
    #     api = (data['behavior']['apistats'])
    #
    #     for i in api.values():
    #         for j in i.keys():
    #             temp.append(j)
    #
    #     for i in list(set(temp)):
    #         apis.append(i)
    #
    #     return apis
if __name__ == '__main__':
    api = json_utils().json_api2_reading()
    hosts = json_utils().json_hosts_reading()
    dll = json_utils().json_dll_reading()
    print(api)
    print(dll)
